@page "/simular_compra"
@model Sistema_de_Acompanhamento_de_Entrega.Pages.simulador_compraModel
@{
    ViewData["Title"] = "Simulador de Compras";
}

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
</head>
<body class="bg-gray-50">
    <div class="min-h-screen py-8">
        <div class="max-w-4xl mx-auto px-4">
            <!-- Header -->
            <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
                <h1 class="text-3xl font-bold text-gray-800 mb-2">Simulador de Compras</h1>
                <p class="text-gray-600">Adicione produtos ao seu carrinho e finalize sua compra</p>
            </div>

            <form method="post" x-data="carrinhoApp()">
                <!-- Informações do Cliente -->
                <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
                    <h2 class="text-xl font-semibold text-gray-800 mb-4">Informações do Cliente</h2>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label asp-for="ClienteNome" class="block text-sm font-medium text-gray-700 mb-2">Nome Completo</label>
                            <input asp-for="ClienteNome" type="text" required
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="Digite seu nome completo">
                            <span asp-validation-for="ClienteNome" class="text-red-500 text-sm"></span>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Data do Pedido</label>
                            <input type="text" readonly
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-100"
                                   x-text="new Date().toLocaleString('pt-BR')">
                        </div>
                    </div>
                </div>

                <!-- Adicionar Produto -->
                <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
                    <h2 class="text-xl font-semibold text-gray-800 mb-4">Adicionar Produto</h2>
                    <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-4">
                        <div class="md:col-span-2">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Nome do Produto</label>
                            <input type="text" x-model="novoProduto.nome"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="Digite o nome do produto">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Quantidade</label>
                            <input type="number" x-model="novoProduto.quantidade" min="1"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="Qtd">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Preço Unitário (R$)</label>
                            <input type="number" x-model="novoProduto.preco" step="0.01" min="0"
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                                   placeholder="0,00">
                        </div>
                    </div>
                    <button type="button" x-on:click="adicionarProduto()"
                            class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md transition duration-200">
                        <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Adicionar ao Carrinho
                    </button>
                </div>

                <!-- Carrinho de Compras -->
                <div class="bg-white rounded-lg shadow-lg p-6 mb-6" x-show="produtos.length > 0">
                    <h2 class="text-xl font-semibold text-gray-800 mb-4">Carrinho de Compras</h2>
                    <div class="overflow-x-auto">
                        <table class="min-w-full">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Produto</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Quantidade</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Preço Unit.</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                <template x-for="(produto, index) in produtos" x-bind:key="index">
                                    <tr>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" x-text="produto.nome"></td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" x-text="produto.quantidade"></td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" x-text="formatarMoeda(produto.preco)"></td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-semibold" x-text="formatarMoeda(produto.quantidade * produto.preco)"></td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                            <button type="button" x-on:click="removerProduto(index)"
                                                    class="text-red-600 hover:text-red-900 transition duration-200">
                                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                </svg>
                                            </button>
                                        </td>
                                    </tr>
                                </template>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Resumo do Pedido -->
                <div class="bg-white rounded-lg shadow-lg p-6 mb-6" x-show="produtos.length > 0">
                    <div class="flex justify-between items-center">
                        <h2 class="text-xl font-semibold text-gray-800">Resumo do Pedido</h2>
                        <div class="text-right">
                            <p class="text-sm text-gray-600">Total de itens: <span x-text="produtos.length" class="font-semibold"></span></p>
                            <p class="text-2xl font-bold text-blue-600" x-text="'Total: ' + formatarMoeda(calcularTotal())"></p>
                        </div>
                    </div>
                </div>

                <!-- Dados ocultos para envio -->
                <input type="hidden" asp-for="ProdutosJson" x-model="produtosJson">

                <!-- Botões de Ação -->
                <div class="flex justify-between items-center">
                    <a href="/" class="bg-gray-500 hover:bg-gray-600 text-white font-medium py-3 px-6 rounded-md transition duration-200">
                        Voltar
                    </a>
                    <button type="submit" x-show="produtos.length > 0"
                            class="bg-green-600 hover:bg-green-700 text-white font-medium py-3 px-8 rounded-md transition duration-200">
                        <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                        Finalizar Compra
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Toast de Sucesso -->
    <div x-show="mostrarToast" x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="opacity-0 transform translate-y-2"
         x-transition:enter-end="opacity-100 transform translate-y-0"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="opacity-100 transform translate-y-0"
         x-transition:leave-end="opacity-0 transform translate-y-2"
         class="fixed top-5 right-5 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-50">
        <span x-text="mensagemToast"></span>
    </div>

    <script>
        function carrinhoApp() {
            return {
                produtos: [],
                novoProduto: {
                    nome: '',
                    quantidade: 1,
                    preco: 0
                },
                mostrarToast: false,
                mensagemToast: '',

                get produtosJson() {
                    return JSON.stringify(this.produtos);
                },

                adicionarProduto() {
                    if (!this.novoProduto.nome || this.novoProduto.quantidade <= 0 || this.novoProduto.preco <= 0) {
                        this.mostrarToastMsg('Por favor, preencha todos os campos corretamente');
                        return;
                    }

                    this.produtos.push({
                        nome: this.novoProduto.nome,
                        quantidade: parseInt(this.novoProduto.quantidade),
                        preco: parseFloat(this.novoProduto.preco)
                    });

                    this.novoProduto = { nome: '', quantidade: 1, preco: 0 };
                    this.mostrarToastMsg('Produto adicionado ao carrinho!');
                },

                removerProduto(index) {
                    this.produtos.splice(index, 1);
                    this.mostrarToastMsg('Produto removido do carrinho');
                },

                calcularTotal() {
                    return this.produtos.reduce((total, produto) => {
                        return total + (produto.quantidade * produto.preco);
                    }, 0);
                },

                formatarMoeda(valor) {
                    return 'R$ ' + parseFloat(valor).toLocaleString('pt-BR', {
                        minimumFractionDigits: 2,
                        maximumFractionDigits: 2
                    });
                },

                mostrarToastMsg(mensagem) {
                    this.mensagemToast = mensagem;
                    this.mostrarToast = true;
                    setTimeout(() => {
                        this.mostrarToast = false;
                    }, 3000);
                }
            }
        }
    </script>

    @if (TempData["Sucesso"] != null)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                alert('@TempData["Sucesso"]');
            });
        </script>
    }
</body>
</html>